<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;net45</TargetFrameworks>
    <AssemblyName>AutoMapper.Attributes</AssemblyName>
    <RootNamespace>AutoMapper.Attributes</RootNamespace>
	<PackageId>AutoMapper.Attributes</PackageId>
	<DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
	<SignAssembly>True</SignAssembly>
	<AssemblyOriginatorKeyFile>AutoMapper.Attributes.snk</AssemblyOriginatorKeyFile>
	<Authors>Spencer Schneidenbach</Authors>
	<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
	<Description>A convenient way to create AutoMapper type mappings using attributes.</Description>
	<Company />
	<PackageProjectUrl>https://github.com/schneidenbach/AutoMapper.Attributes</PackageProjectUrl>
	<PackageLicenseUrl>https://github.com/schneidenbach/AutoMapper.Attributes/blob/master/LICENSE</PackageLicenseUrl>
	<RepositoryUrl>https://github.com/schneidenbach/AutoMapper.Attributes</RepositoryUrl>
	<PackageTags>AutoMapper, AutoMapper.Attributes</PackageTags>
	<AssemblyVersion>6.0.0.0</AssemblyVersion>
	<FileVersion>6.0.0.0</FileVersion>
	<Version>6.0.0</Version>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="5.0.2" />
    <PackageReference Include="MSTest.TestAdapter" Version="1.2.0" />
    <PackageReference Include="MSTest.TestFramework" Version="1.2.0" />
    <PackageReference Include="NUnit3TestAdapter" Version="3.9.0" />
    <PackageReference Include="System.Linq" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' ">
    <PackageReference Include="System.Reflection.TypeExtensions" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
    <PackageReference Include="Microsoft.NET.Test.Sdk">
      <Version>15.3.0</Version>
    </PackageReference>
  </ItemGroup>

</Project>